---
/**
 * Sidebar组件
 *
 * 用于文档页面的侧边栏导航
 *
 * @example
 * ```astro
 * ---
 * import Sidebar from './Sidebar.astro';
 *
 * const sidebarItems = [
 *   { title: "入门", items: [
 *     { href: "/docs/getting-started", text: "快速开始" },
 *     { href: "/docs/installation", text: "安装" }
 *   ]}
 * ];
 * ---
 *
 * <Sidebar sidebarItems={sidebarItems} />
 * ```
 */

import '../style.ts';
import { isPathMatch } from '../utils/path';
import Modal from '../components/display/Modal.astro';
import { MenuIcon, SidebarNav } from '../index';
import type { ISidebarProps } from '../index';

export interface Props extends ISidebarProps {}

const {
	sidebarItems,
	class: className,
	debug = false,
	marginTop = 'md',
	marginBottom = 'md',
} = Astro.props;

// 自动获取当前路径
const currentPath = Astro.url.pathname;

const debugClass = debug ? 'cosy:border cosy:border-red-500' : '';

function getVerticalMarginTopClasses(marginTop: string) {
	if (marginTop === 'none') return 'cosy:mt-0';
	if (marginTop === 'xs') return 'cosy:mt-1';
	if (marginTop === 'sm') return 'cosy:mt-2';
	if (marginTop === 'md') return 'cosy:mt-4';
	if (marginTop === 'lg') return 'cosy:mt-6';
	if (marginTop === 'xl') return 'cosy:mt-8';
	if (marginTop === '2xl') return 'cosy:mt-10';
	if (marginTop === '3xl') return 'cosy:mt-12';
	if (marginTop === '4xl') return 'cosy:mt-16';
	if (marginTop === '5xl') return 'cosy:mt-20';
	return '';
}

function getVerticalMarginBottomClasses(marginBottom: string) {
	if (marginBottom === 'none') return 'cosy:mb-0';
	if (marginBottom === 'xs') return 'cosy:mb-1';
	if (marginBottom === 'sm') return 'cosy:mb-2';
	if (marginBottom === 'md') return 'cosy:mb-4';
	if (marginBottom === 'lg') return 'cosy:mb-6';
	if (marginBottom === 'xl') return 'cosy:mb-8';
	if (marginBottom === '2xl') return 'cosy:mb-10';
	if (marginBottom === '3xl') return 'cosy:mb-12';
	if (marginBottom === '4xl') return 'cosy:mb-16';
	if (marginBottom === '5xl') return 'cosy:mb-20';
	return '';
}

// 获取当前活动的一级导航项
const currentSection = sidebarItems.find((section) =>
	section.items?.some((item) => isPathMatch(currentPath, item.href))
);
---

{/* 移动端导航栏 */}
<div
	class:list={[
		'cosy:flex cosy:lg:hidden cosy:items-center cosy:justify-between cosy:px-4 cosy:py-2 cosy:border-b cosy:border-base-300 cosy:bg-base-100 cosy:relative cosy:z-10',
		debugClass,
	]}>
	<div class="cosy:flex cosy:items-center cosy:gap-2">
		<button
			type="button"
			class="cosy:p-2 cosy:btn cosy:btn-ghost cosy:btn-sm"
			data-modal-target="mobile-sidebar">
			<MenuIcon class="cosy:w-5 cosy:h-5" />
		</button>
		<span class="cosy:font-medium cosy:text-sm">{currentSection?.text || '导航'}</span>
	</div>
</div>

{/* 移动端侧边栏弹出层 */}
<Modal id="mobile-sidebar" class="cosy:mx-4 cosy:lg:w-80 cosy:w-[calc(100vw-2rem)] cosy:max-w-full">
	<div class="cosy:h-[calc(100vh-8rem)] cosy:overflow-y-auto">
		<SidebarNav sidebarItems={sidebarItems} currentPath={currentPath} debug={debug} />
	</div>
</Modal>

{/* 桌面端侧边栏 */}
<aside
	data-sidebar
	data-current-path={currentPath}
	data-margin-top={marginTop}
	data-margin-bottom={marginBottom}
	class:list={[
		className,
		debugClass,
		'cosy:hidden cosy:lg:block',
		getVerticalMarginTopClasses(marginTop),
		getVerticalMarginBottomClasses(marginBottom),
	]}>
	<div class="cosy:top-16 cosy:sticky cosy:pb-48 cosy:h-[calc(100vh-0rem)] cosy:overflow-y-auto">
		<SidebarNav sidebarItems={sidebarItems} currentPath={currentPath} debug={debug} />
	</div>
</aside>

<script>
	// 处理侧边栏滚动位置保存和恢复
	document.addEventListener('astro:before-preparation', () => {
		// 获取桌面侧边栏滚动容器
		const desktopSidebarContent = document.querySelector(
			'aside[data-sidebar] .cosy\\:overflow-y-auto'
		);

		// 保存滚动位置到localStorage
		if (desktopSidebarContent) {
			localStorage.setItem('sidebarScrollPosition', desktopSidebarContent.scrollTop.toString());
		}

		// 获取移动端侧边栏滚动容器
		const mobileSidebarContent = document.querySelector(
			'.cosy\\:h-\\[calc\\(100vh-8rem\\)\\].cosy\\:overflow-y-auto'
		);

		// 保存移动端滚动位置
		if (mobileSidebarContent) {
			localStorage.setItem(
				'mobileSidebarScrollPosition',
				mobileSidebarContent.scrollTop.toString()
			);
		}
	});

	document.addEventListener('astro:page-load', () => {
		// 获取桌面侧边栏滚动容器
		const desktopSidebarContent = document.querySelector(
			'aside[data-sidebar] .cosy\\:overflow-y-auto'
		);

		// 恢复滚动位置
		if (desktopSidebarContent) {
			const savedPosition = localStorage.getItem('sidebarScrollPosition');
			if (savedPosition) {
				desktopSidebarContent.scrollTop = parseInt(savedPosition, 10);
			}
		}

		// 获取移动端侧边栏滚动容器
		const mobileSidebarContent = document.querySelector(
			'.cosy\\:h-\\[calc\\(100vh-8rem\\)\\].cosy\\:overflow-y-auto'
		);

		// 恢复移动端滚动位置
		if (mobileSidebarContent) {
			const savedMobilePosition = localStorage.getItem('mobileSidebarScrollPosition');
			if (savedMobilePosition) {
				mobileSidebarContent.scrollTop = parseInt(savedMobilePosition, 10);
			}
		}
	});
</script>
