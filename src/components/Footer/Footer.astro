---
import type { FooterProps } from './types';
import '../../styles/shared-ui.css';
import { Fragment } from 'vue';
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

interface Props extends FooterProps {}

const { config } = Astro.props;
const currentYear = new Date().getFullYear();

const renderIcon = (
  icon: FooterProps['config']['socialLinks'][number]['icon']
) => {
  switch (icon.type) {
    case 'svg':
      return icon.content;
    case 'image':
      return `<img src="${icon.content}" alt="" class="w-5 h-5" />`;
    case 'component':
      return icon.content;
    case 'astro-image':
      const imageData = icon.content as ImageMetadata;
      return `<Image src={${JSON.stringify(imageData)}} alt="" width={20} height={20} class="w-5 h-5" />`;
    default:
      return '';
  }
};
---

<footer
  class="bg-base-200/50 dark:bg-base-300/50 z-50 backdrop-blur-md [&_a]:no-underline">
  <div class="footer sm:footer-horizontal p-10 text-base-content">
    <aside
      class="flex flex-col items-center sm:items-start gap-2 place-self-center">
      <a href={config.homeLink} class="flex items-center gap-2">
        <span class="text-xl font-bold">{config.siteName}</span>
      </a>
      <p class="text-sm opacity-70">{config.slogan}</p>

      <div class="flex gap-4 mt-4 sm:mt-0">
        {
          config.socialLinks.map((link) => (
            <a
              href={link.url}
              target="_blank"
              rel="noopener noreferrer"
              class="btn btn-ghost btn-sm p-1 hover:text-primary"
              title={link.name}>
              <span set:html={renderIcon(link.icon)} />
              <span class="sr-only">{link.name}</span>
            </a>
          ))
        }
      </div>
    </aside>

    {
      config.navGroups.map((group) => (
        <nav class="place-self-center text-center flex flex-col items-center">
          <h6 class="footer-title">{group.titleKey}</h6>
          {group.links.map((link) => (
            <a
              href={link.href}
              target={link.external ? '_blank' : undefined}
              rel={link.external ? 'noopener noreferrer' : undefined}
              class="hover:opacity-80">
              {link.text}
            </a>
          ))}
        </nav>
      ))
    }
  </div>

  <div class="divider mt-8"></div>

  <div
    class="flex flex-col sm:flex-col justify-center items-center p-4 text-sm opacity-70">
    <p class="text-center mb-4">{config.inspirationalSlogan}</p>
    <div class="flex items-center gap-2">
      <p>Â© {currentYear} {config.company} - {config.copyright}</p>
    </div>
    {
      config.icp && (
        <div class="text-center py-4">
          <p>{config.icp}</p>
        </div>
      )
    }
  </div>
</footer>
