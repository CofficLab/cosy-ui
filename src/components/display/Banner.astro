---
/**
 * @component Banner
 *
 * @description
 * Banner 组件用于在页面中展示醒目的横幅信息，通常用于展示重要的标语、公告或营销信息。
 * 组件设计简洁大方，具有平滑的动画效果，能够吸引用户注意力。
 *
 * @design
 * 设计理念：
 * 1. 视觉冲击力 - 使用大号字体和醒目的背景，确保信息能够被用户注意到
 * 2. 简洁明了 - 简单的布局和充足的留白，让信息更容易被理解
 * 3. 动态效果 - 使用淡入和上滑动画，增强用户体验
 * 4. 响应式设计 - 在不同屏幕尺寸下保持良好的可读性
 *
 * 视觉特点：
 * - 圆角设计：柔和的视觉效果
 * - 悬停效果：轻微放大和阴影增强，提供交互反馈
 * - 动画效果：淡入和上滑动画，增强视觉吸引力
 * - 模糊背景：半透明背景配合模糊效果，现代感强
 *
 * @usage
 * 基本用法：
 * ```astro
 * <Banner>欢迎使用我们的服务</Banner>
 * ```
 *
 * 在页脚中使用：
 * ```astro
 * <footer>
 *   <Banner>构建美好的数字体验</Banner>
 * </footer>
 * ```
 *
 * @slots
 * @slot default - Banner 中显示的文本内容
 *
 * @accessibility
 * - 使用适当的字体大小和行高，确保文本可读性
 * - 动画遵循 prefers-reduced-motion 媒体查询，尊重用户的动画偏好设置
 */

import '../../style.ts';

interface Props {
	/**
	 * 自定义CSS类，可用于覆盖默认样式
	 */
	class?: string;

	/**
	 * 背景颜色，默认为primary
	 */
	bgColor?: 'primary' | 'secondary' | 'accent' | 'info' | 'success' | 'warning' | 'error';

	/**
	 * 文本颜色，默认根据背景色自动设置
	 */
	textColor?: string;

	/**
	 * 是否启用动画效果，默认为true
	 */
	animated?: boolean;
}

const { class: className = '', bgColor = 'primary', textColor = '', animated = true } = Astro.props;

// 根据背景色自动设置文本颜色
const getTextColorClass = () => {
	if (textColor) return `cosy:text-${textColor}`;

	// 对于深色背景，使用白色文本
	const darkBgColors = ['primary', 'secondary', 'accent', 'error'];
	return darkBgColors.includes(bgColor) ? 'cosy:text-white' : 'cosy:text-gray-800';
};

// 组合CSS类
const bannerClasses = [
	'cosy:w-full',
	'cosy:py-8',
	'cosy:px-4',
	'cosy:rounded-lg',
	'cosy:text-center',
	'cosy:text-2xl',
	'cosy:md:text-3xl',
	'cosy:font-bold',
	'cosy:transition-all',
	'cosy:duration-300',
	'cosy:ease-in-out',
	'cosy:backdrop-blur-sm',
	'cosy:bg-opacity-90',
	'cosy:shadow-md',
	'cosy:hover:shadow-lg',
	'cosy:hover:scale-[1.01]',
	`cosy:bg-${bgColor}`,
	getTextColorClass(),
	className,
].join(' ');

// 动画类
const animationClasses = animated ? 'cosy:animate-fadeIn cosy:animate-slideUp' : '';
---

<div class={`${bannerClasses} ${animationClasses}`}>
	<slot />
</div>

<style>
	@keyframes fadeIn {
		from {
			opacity: 0;
		}
		to {
			opacity: 1;
		}
	}

	@keyframes slideUp {
		from {
			transform: translateY(20px);
		}
		to {
			transform: translateY(0);
		}
	}

	/* 动画类 */
	.cosy\:animate-fadeIn {
		animation: fadeIn 0.8s ease-in-out;
	}

	.cosy\:animate-slideUp {
		animation: slideUp 0.5s ease-out;
	}

	/* 尊重用户的减少动画偏好 */
	@media (prefers-reduced-motion: reduce) {
		.cosy\:animate-fadeIn,
		.cosy\:animate-slideUp {
			animation: none;
		}
	}
</style>
