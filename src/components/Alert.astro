---
interface Props {
  type?: 'info' | 'success' | 'warning' | 'error';
  title?: string;
  closeable?: boolean;
  class?: string;
}

const {
  type = 'info',
  title,
  closeable = false,
  class: className = '',
} = Astro.props;

// 根据类型设置样式
const alertClass = {
  info: 'alert-info',
  success: 'alert-success',
  warning: 'alert-warning',
  error: 'alert-error',
}[type];

// 根据类型设置图标
const icons = {
  info: `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="h-6 w-6 stroke-current">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
  </svg>`,
  success: `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 stroke-current" fill="none" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
  </svg>`,
  warning: `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 stroke-current" fill="none" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
  </svg>`,
  error: `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 stroke-current" fill="none" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" />
  </svg>`,
};
---

<div class={`alert ${alertClass} ${className}`} role="alert">
  <div class="flex items-center gap-2">
    <Fragment set:html={icons[type]} />
    <div class="flex-1">
      {title && <h3 class="font-bold">{title}</h3>}
      <div><slot /></div>
    </div>
    {closeable && (
      <button class="btn btn-ghost btn-sm btn-circle close-alert">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    )}
  </div>
</div>

{closeable && (
  <script>
    function initializeCloseButtons() {
      const closeButtons = document.querySelectorAll('.close-alert');
      closeButtons.forEach(button => {
        button.addEventListener('click', () => {
          const alert = button.closest('.alert');
          if (alert) {
            alert.remove();
          }
        });
      });
    }

    // 初始化关闭按钮
    initializeCloseButtons();

    // Astro 页面切换时重新初始化
    document.addEventListener('astro:page-load', initializeCloseButtons);
  </script>
)} 