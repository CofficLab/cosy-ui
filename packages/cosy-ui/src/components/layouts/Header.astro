---
import SearchIcon from '../icons/SearchIcon.astro';
import Link from '../base/Link.astro';
import Button from '../base/Button.astro';
import Image from '../base/Image.astro';
import '../../app.css';

// 自定义图片元数据接口
interface ImageMetadata {
	src: string;
	width: number;
	height: number;
	format: string;
}

interface Props {
	logo: ImageMetadata;
	/**
	 * Logo 链接地址
	 * @default "/"
	 */
	logoHref?: string;
	languages?: Array<{ code: string; name: string }>;
	currentLocale?: string;
	navItems?: Array<{
		href: string;
		label: string;
		match: (path: string) => boolean;
	}>;
	socialLinks?: Array<{
		name: string;
		url: string;
		icon: any;
	}>;
	/**
	 * 是否固定在顶部
	 * @default true
	 */
	sticky?: boolean;
}

const {
	logo,
	logoHref = "/",
	navItems = [],
	sticky = true,
} = Astro.props;

type NavItem = { href: string; label: string; match: (path: string) => boolean };
---

<header class:list={[
	"navbar bg-accent/30 backdrop-blur border-base-200 z-50 w-full",
	{ "fixed top-0": sticky }
]}>
	<div class="navbar-start">
		<!-- 移动端菜单 -->
		<div class="dropdown lg:hidden">
			<div tabindex="0" role="button" class="btn btn-ghost btn-circle">
				<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h7" />
				</svg>
			</div>
			<ul tabindex="0" class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-100 rounded-box w-52">
				{navItems.map((item: NavItem) => (
					<li>
						<Link href={item.href}>
							{item.label}
						</Link>
					</li>
				))}
			</ul>
		</div>

		<Link href={logoHref} class="btn btn-ghost">
			<Image src={logo} alt="logo" class="w-10 h-10" />
		</Link>
	</div>

	<!-- 桌面端导航 -->
	<div class="navbar-center hidden lg:flex">
		<ul class="menu menu-horizontal px-1">
			{navItems.map((item: NavItem) => (
				<li>
					<Link href={item.href}>
						{item.label}
					</Link>
				</li>
			))}
		</ul>
	</div>

	<div class="navbar-end">
		
	</div>
</header>

{sticky && (
	<div class="h-16"></div>
)}

<script define:vars={{ sticky }}>
	if (sticky) {
		const header = document.querySelector('header');
		window.addEventListener('scroll', () => {
			if (window.pageYOffset > 0) {
				header?.classList.add('shadow-lg');
			} else {
				header?.classList.remove('shadow-lg');
			}
		});
	}
</script>