---
/**
 * @component Header
 *
 * @description
 * Header 组件是一个用于网站顶部导航的布局组件，提供了logo、导航菜单、语言切换等功能。
 * 组件支持响应式设计，在不同屏幕尺寸下有良好的显示效果，并可选择固定在页面顶部。
 *
 * @design
 * 设计理念：
 * 1. 简洁实用 - 提供清晰的导航和品牌展示，不过度占用视觉空间
 * 2. 响应式适配 - 在移动端和桌面端都有合适的展现形式
 * 3. 可定制性 - 支持多种配置选项，适应不同网站的风格和需求
 * 4. 多语言支持 - 内置语言切换功能，便于构建国际化网站
 *
 * @usage
 * 基本用法：
 * ```astro
 * <Header
 *   logo={import("../assets/logo.png")}
 *   logoHref="/"
 *   navItems={[
 *     { href: "/docs", label: "文档", match: (path) => path.startsWith("/docs") },
 *     { href: "/components", label: "组件", match: (path) => path.startsWith("/components") }
 *   ]}
 * />
 * ```
 *
 * 自定义语言选项：
 * ```astro
 * <Header
 *   logo={import("../assets/logo.png")}
 *   languages={["zh-cn", "en", "ja"]}
 * />
 * ```
 *
 * 带有基础路径：
 * ```astro
 * <Header
 *   logo={import("../assets/logo.png")}
 *   basePath="/my-site"
 * />
 * ```
 *
 * 自定义高度：
 * ```astro
 * <Header
 *   logo={import("../assets/logo.png")}
 *   height="lg"
 * />
 */
import '../../app.css';
import Link from '../base/Link.astro';
import Image from '../base/Image.astro';
import { LanguageSwitcher, LinkUtil, type HeaderProps, type NavItem } from '../../index';
import Logo from '../../assets/logo-rounded.png';

export interface Props extends HeaderProps {
	debug?: boolean;
}

const {
	height = 'md',
	languages = ['zh-cn', 'en'],
	logo = Logo,
	logoHref = '/',
	navItems = [],
	sticky = true,
	debug = false,
} = Astro.props;

// 根据高度设置样式
const headerHeightClasses = {
	'3xs': 'cosy:h-4',
	'2xs': 'cosy:h-6',
	xs: 'cosy:h-8',
	sm: 'cosy:h-10',
	md: 'cosy:h-12',
	lg: 'cosy:h-16',
	xl: 'cosy:h-20',
};

const headerHeightClass = headerHeightClasses[height];
const linkHeightClasses = {
	'3xs': 'cosy:py-0',
	'2xs': 'cosy:py-0',
	xs: 'cosy:py-0',
	sm: 'cosy:py-1',
	md: 'cosy:py-1',
	lg: 'cosy:py-2',
	xl: 'cosy:py-3',
};

// 设置logo大小
const logoSizeClasses = {
	'3xs': 'cosy:w-3 cosy:h-3',
	'2xs': 'cosy:w-4 cosy:h-4',
	xs: 'cosy:w-5 cosy:h-5',
	sm: 'cosy:w-6 cosy:h-6',
	md: 'cosy:w-8 cosy:h-8',
	lg: 'cosy:w-10 cosy:h-10',
	xl: 'cosy:w-12 cosy:h-12',
};

const logoSizeClass = logoSizeClasses[height];
const linkHeightClass = linkHeightClasses[height];
const currentPath = Astro.url.pathname;
const activeLink = LinkUtil.getActiveLink(
	currentPath,
	navItems.map((item: NavItem) => item.href)
);
---

<header
	class:list={[
		'cosy:navbar cosy:bg-accent/70 cosy:backdrop-blur not-prose cosy:border-base-200 cosy:z-50 cosy:w-full cosy:m-0 cosy:p-0 cosy:min-h-1',
		headerHeightClass,
		{ 'cosy:fixed cosy:top-0': sticky },
		{ 'cosy:border cosy:border-dashed cosy:border-red-500': debug },
	]}>
	<div class="cosy:navbar-start cosy:pl-1">
		<Link
			animation="none"
			debug={debug}
			href={logoHref}
			class:list={['cosy:btn cosy:btn-ghost', linkHeightClass]}>
			<Image
				rounded="full"
				showPlaceholder={false}
				transition="none"
				lazy={false}
				src={logo}
				alt="logo"
				class={logoSizeClass}
			/>
		</Link>
	</div>

	<!-- 导航 -->
	<div class="cosy:hidden cosy:lg:flex cosy:navbar-center">
		<ul class:list={['cosy:px-1 cosy:menu cosy:menu-horizontal', linkHeightClass]}>
			{
				navItems.map((item: NavItem) => (
					<li>
						<Link
							variant={activeLink == item.href ? 'primary' : 'default'}
							href={item.href}
							class:list={[linkHeightClass]}>
							{item.label}
						</Link>
					</li>
				))
			}
		</ul>
	</div>

	<div class="cosy:navbar-end cosy:pr-1">
		<LanguageSwitcher languages={languages} />
	</div>
</header>
