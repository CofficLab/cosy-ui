---
/**
 * DefaultLayout组件
 * 
 * 包含常用页面结构的默认布局，包括简单的页眉和页脚
 * 
 * @example
 * ```astro
 * ---
 * import DefaultLayout from '../layouts/DefaultLayout.astro';
 * ---
 * 
 * <DefaultLayout title="页面标题" description="页面描述">
 *   <h1>页面内容</h1>
 *   <p>这是页面的主要内容</p>
 * </DefaultLayout>
 * ```
 */

import BaseLayout from './BaseLayout.astro';
import Link from '../Link.astro';

// 导入样式
import '../../styles/layouts/default-layout.css';

export interface NavLink {
  href: string;
  label: string;
}

export interface Props {
  /**
   * 页面标题
   */
  title: string;
  
  /**
   * 页面描述
   */
  description?: string;
  
  /**
   * 页面关键词
   */
  keywords?: string;
  
  /**
   * 是否显示页眉
   * @default true
   */
  showHeader?: boolean;
  
  /**
   * 是否显示页脚
   * @default true
   */
  showFooter?: boolean;
  
  /**
   * 网站名称
   * @default "网站名称"
   */
  siteName?: string;
  
  /**
   * 导航链接
   */
  navLinks?: NavLink[];
  
  /**
   * 页面容器类名
   */
  containerClass?: string;
  
  /**
   * 自定义头部内容
   */
  head?: astroHTML.JSX.Element;
  
  /**
   * 页面类名
   */
  class?: string;
  
  /**
   * 类名列表
   */
  'class:list'?: any;
}

const {
  title,
  description,
  keywords,
  showHeader = true,
  showFooter = true,
  siteName = "网站名称",
  navLinks = [
    { href: "/", label: "首页" },
    { href: "/about", label: "关于" },
    { href: "/contact", label: "联系我们" }
  ],
  containerClass = "container mx-auto px-4 py-8",
  head,
  class: className,
  'class:list': classList,
  ...rest
} = Astro.props;

const year = new Date().getFullYear();
---

<BaseLayout 
  title={title} 
  description={description} 
  keywords={keywords}
  head={head}
  class={className}
  {...rest}
>
  {showHeader && (
    <header class="site-header">
      <div class="container px-4 py-4">
        <div class="header-content">
          <div class="logo">
            <a href="/" class="site-name">{siteName}</a>
          </div>
          
          <nav class="main-nav">
            <ul class="nav-list">
              {navLinks.map((link: NavLink) => (
                <li class="nav-item">
                  <Link href={link.href} variant="text">{link.label}</Link>
                </li>
              ))}
            </ul>
          </nav>
        </div>
      </div>
    </header>
  )}
  
  <main class={containerClass}>
    <slot />
  </main>
  
  {showFooter && (
    <footer class="site-footer">
      <div class="container px-4 py-8">
        <div class="footer-content">
          <div class="footer-info">
            <p class="copyright">&copy; {year} {siteName}. 保留所有权利。</p>
          </div>
          
          <nav class="footer-nav">
            <ul class="nav-list">
              {navLinks.map((link: NavLink) => (
                <li class="nav-item">
                  <Link href={link.href} variant="text" size="sm">{link.label}</Link>
                </li>
              ))}
            </ul>
          </nav>
        </div>
      </div>
    </footer>
  )}
  
  <slot name="after-footer" />
</BaseLayout> 
