---
/**
 * @component TeamMember
 * 
 * @description
 * TeamMember 组件用于展示单个团队成员的信息，包括姓名、职位、头像、简介和社交媒体链接。
 * 组件采用卡片式设计，支持悬停效果，并可以链接到成员的社交媒体账号。
 * 
 * @design
 * 设计理念：
 * 1. 个人展示 - 突出展示团队成员的个人信息和形象
 * 2. 社交连接 - 提供社交媒体链接，方便与团队成员建立联系
 * 3. 视觉一致性 - 使用卡片组件确保与整体设计风格一致
 * 4. 交互反馈 - 悬停时提供视觉反馈，增强用户体验
 * 
 * @usage
 * 基本用法：
 * ```astro
 * <TeamMember
 *   name="张三"
 *   role="前端开发工程师"
 *   avatar="/images/avatars/zhangsan.jpg"
 *   bio="拥有5年前端开发经验，专注于React和Vue生态系统。"
 * />
 * ```
 * 
 * 包含社交媒体链接：
 * ```astro
 * <TeamMember
 *   name="李四"
 *   role="UI设计师"
 *   avatar="/images/avatars/lisi.jpg"
 *   bio="专注于用户体验和界面设计，热爱创造直观易用的产品。"
 *   socialLinks={[
 *     { platform: 'github', url: 'https://github.com/lisi' },
 *     { platform: 'twitter', url: 'https://twitter.com/lisi' },
 *     { platform: 'linkedin', url: 'https://linkedin.com/in/lisi' }
 *   ]}
 * />
 * ```
 */

import Link from './Link.astro';
import SocialIcon from './SocialIcon.astro';
import Image from './Image.astro';

// 导入样式
import '../styles/index.css';
import '../styles/components/team-member.css';

interface SocialLink {
	/**
	 * 社交媒体平台
	 */
	platform: 'github' | 'twitter' | 'linkedin' | 'website' | 'email';
	/**
	 * 社交媒体链接URL
	 */
	url: string;
}

// 自定义图片元数据接口，替代 astro 的 ImageMetadata
interface CustomImageMetadata {
	src: string;
	width: number;
	height: number;
	format: string;
}

export interface Props {
	/**
	 * 团队成员姓名
	 */
	name: string;
	/**
	 * 团队成员职位
	 */
	role: string;
	/**
	 * 团队成员头像
	 */
	avatar: CustomImageMetadata | string;
	/**
	 * 团队成员简介
	 */
	bio: string;
	/**
	 * 社交媒体链接
	 */
	socialLinks?: SocialLink[];
	/**
	 * 自定义类名
	 */
	class?: string;
}

const { name, role, avatar, bio, socialLinks, class: className = '' } = Astro.props;
---

<div class:list={['team-member-card', className]}>
	<figure class="team-member-avatar-container">
		<Image 
			src={avatar}
			alt={`${name}'s avatar`}
			width={192}
			height={192}
			rounded="xl"
			transition="fade"
			hover="brightness"
			class="team-member-avatar"
		/>
	</figure>
	<div class="team-member-content">
		<h2 class="team-member-name">{name}</h2>
		<p class="team-member-role">{role}</p>
		<p class="team-member-bio">{bio}</p>

		{
			socialLinks && socialLinks.length > 0 && (
				<div class="team-member-social">
					{socialLinks.map((link: SocialLink) => (
						<Link
							href={link.url}
							external
							variant="ghost"
							class="team-member-social-link"
							aria-label={`Visit ${name}'s ${link.platform} profile`}>
							<SocialIcon platform={link.platform} class="team-member-social-icon" />
						</Link>
					))}
				</div>
			)
		}
	</div>
</div>

