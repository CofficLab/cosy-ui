---
/**
 * @component Main
 *
 * @description
 * Main 组件是页面的主要内容区域，使用 Container 组件提供响应式布局。
 * 它适合作为页面的主体部分，自动处理不同屏幕尺寸下的布局和内边距。
 *
 * @design
 * 设计理念：
 * 1. 结构清晰 - 明确表示页面的主要内容区域，提高语义化
 * 2. 响应式布局 - 在不同屏幕尺寸下自动调整内边距和宽度
 * 3. 灵活配置 - 支持自定义容器尺寸、内边距和背景颜色
 * 4. 与容器集成 - 无缝集成 Container 组件，保持布局一致性
 *
 * @usage
 * 基本用法：
 * ```astro
 * ---
 * import { Main } from '@coffic/cosy-ui';
 * ---
 *
 * <Main>
 *   <h1>页面标题</h1>
 *   <p>页面内容</p>
 * </Main>
 * ```
 *
 * 自定义容器尺寸：
 * ```astro
 * <Main size="lg">
 *   <p>这是一个较宽的主内容区域</p>
 * </Main>
 * ```
 *
 * 自定义内边距：
 * ```astro
 * <Main verticalPadding="lg" padding="xl">
 *   <p>这个主内容区域有更大的内边距</p>
 * </Main>
 * ```
 *
 * 自定义背景颜色：
 * ```astro
 * <Main backgroundColor="primary">
 *   <p>这个主内容区域有主题色背景</p>
 * </Main>
 * ```
 */

import Container from './Container.astro';

// 导入样式
import '../../app.css';

export interface Props {
	/**
	 * 容器大小
	 * @default "md"
	 */
	size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'full';

	/**
	 * 水平内边距（通过 Container 组件的 padding 属性设置）
	 * @default "md"
	 */
	padding?: 'none' | 'sm' | 'md' | 'lg' | 'xl';

	/**
	 * 垂直内边距
	 * @default "md"
	 */
	verticalPadding?: 'none' | 'sm' | 'md' | 'lg' | 'xl' | string;

	/**
	 * 是否居中显示内容
	 * @default true
	 */
	centered?: boolean;

	/**
	 * 背景颜色
	 * @default undefined
	 */
	backgroundColor?: 'primary' | 'secondary' | 'tertiary' | 'light' | 'dark' | string;

	/**
	 * HTML id 属性
	 */
	id?: string;

	/**
	 * 类名
	 */
	class?: string;

	/**
	 * 类名列表
	 */
	'class:list'?: any;
}

const {
	size = 'md',
	padding = 'md',
	verticalPadding = 'md',
	centered = true,
	backgroundColor,
	id,
	class: className,
	'class:list': classList,
	...rest
} = Astro.props;

// 获取垂直内边距的Tailwind类
function getVerticalPaddingClasses(padding: string) {
	if (padding === 'none') return 'cosy:py-0';
	if (padding === 'sm') return 'cosy:py-2';
	if (padding === 'md') return 'cosy:py-4';
	if (padding === 'lg') return 'cosy:py-6';
	if (padding === 'xl') return 'cosy:py-8';
	return ''; // 对于自定义padding，使用内联样式
}

// 获取背景颜色的Tailwind类
function getBgColorClasses(color: string | undefined) {
	if (!color) return '';
	if (color === 'primary') return 'cosy:bg-primary';
	if (color === 'secondary') return 'cosy:bg-secondary';
	if (color === 'tertiary') return 'cosy:bg-accent';
	if (color === 'light') return 'cosy:bg-base-100';
	if (color === 'dark') return 'cosy:bg-base-300';
	return ''; // 对于自定义颜色，使用内联样式
}

const verticalPaddingClass = getVerticalPaddingClasses(verticalPadding as string);
const bgColorClass = getBgColorClasses(backgroundColor);

// 构建自定义样式
const customStyle = [];

// 只有当没有对应的Tailwind类时，才使用内联样式
if (!verticalPaddingClass && verticalPadding && verticalPadding !== 'none') {
	customStyle.push(`padding-top: ${verticalPadding}; padding-bottom: ${verticalPadding};`);
}

if (!bgColorClass && backgroundColor) {
	customStyle.push(`background-color: ${backgroundColor};`);
}

const inlineStyle = customStyle.length > 0 ? customStyle.join(' ') : undefined;
---

<main
	id={id}
	class:list={['cosy:w-full', verticalPaddingClass, bgColorClass, className, classList]}
	style={inlineStyle}
	{...rest}>
	<Container size={size} padding={padding} centered={centered}>
		<slot />
	</Container>
</main>
