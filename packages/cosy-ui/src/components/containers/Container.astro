---
/**
 * @component Container
 *
 * @description
 * Container 组件是一个基础的布局容器，用于限制内容宽度并居中显示。
 * 它提供了多种尺寸和内边距选项，适用于各种布局需求。
 *
 * @design
 * 设计理念：
 * 1. 内容约束 - 限制内容宽度，提高可读性和视觉美感
 * 2. 响应式设计 - 在不同屏幕尺寸下自动调整内边距
 * 3. 灵活配置 - 支持多种尺寸和内边距选项
 * 4. 简单易用 - 提供直观的API，易于集成到各种页面布局中
 *
 * @usage
 * 基本用法：
 * ```astro
 * <Container>
 *   <p>内容将被限制在一个合理的宽度内并居中显示</p>
 * </Container>
 * ```
 *
 * 自定义尺寸和内边距：
 * ```astro
 * <Container size="sm" padding="lg">
 *   <p>小尺寸容器，大内边距</p>
 * </Container>
 * ```
 *
 * 全宽容器：
 * ```astro
 * <Container size="full" padding="none">
 *   <p>全宽容器，无内边距</p>
 * </Container>
 * ```
 *
 * 不居中的容器：
 * ```astro
 * <Container centered={false}>
 *   <p>不居中的容器，靠左对齐</p>
 * </Container>
 * ```
 *
 * 带边框的容器：
 * ```astro
 * <Container border>
 *   <p>带有边框的容器</p>
 * </Container>
 * ```
 */

import type { HTMLAttributes } from 'astro/types';

// 导入样式
import '../../app.css';

interface Props extends HTMLAttributes<'div'> {
	/**
	 * 容器尺寸
	 * @default "md"
	 */
	size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'full';

	/**
	 * 内边距大小
	 * @default "md"
	 */
	padding?: 'none' | 'sm' | 'md' | 'lg' | 'xl';

	/**
	 * 是否居中显示
	 * @default true
	 */
	centered?: boolean;

	/**
	 * 是否显示边框
	 * @default false
	 */
	border?: boolean;

	/**
	 * 自定义类名
	 */
	class?: string;

	/**
	 * 类名列表
	 */
	'class:list'?: any;
}

const {
	size = 'md',
	padding = 'md',
	centered = true,
	border = false,
	class: className = '',
	'class:list': classList,
	...rest
} = Astro.props;

// 静态类名映射
const sizeClasses = {
	xs: 'cosy:max-w-xs',
	sm: 'cosy:max-w-sm',
	md: 'cosy:max-w-2xl',
	lg: 'cosy:max-w-4xl',
	xl: 'cosy:max-w-6xl',
	full: 'cosy:w-full',
} as const;

const paddingClasses = {
	none: 'cosy:p-0',
	sm: 'cosy:p-2',
	md: 'cosy:p-4',
	lg: 'cosy:p-6',
	xl: 'cosy:p-8',
} as const;

// 构建CSS类名
const containerClasses = [
	'cosy:w-full',
	centered ? 'cosy:mx-auto' : '',
	sizeClasses[size],
	paddingClasses[padding],
	border ? 'cosy:border cosy:rounded-lg' : '',
	className,
];
---

<section class:list={[containerClasses, classList]} {...rest}>
	<slot />
</section>
