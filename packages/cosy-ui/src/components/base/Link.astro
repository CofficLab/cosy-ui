---
/**
 * @component Link
 * 
 * @description
 * Link 组件是一个增强的链接组件，提供了丰富的样式变体和动画效果。
 * 它可以用于导航、按钮、行动号召等多种场景。
 * 
 * @design
 * 设计理念：
 * 1. 灵活多变 - 提供多种样式变体，适应不同场景
 * 2. 视觉反馈 - 通过悬停效果提供用户交互反馈
 * 3. 一致性 - 保持与整体设计系统的一致性
 * 4. 可访问性 - 确保链接可被键盘导航和屏幕阅读器识别
 * 
 * @usage
 * 基本用法：
 * ```astro
 * <Link href="/about">关于我们</Link>
 * ```
 * 
 * 外部链接：
 * ```astro
 * <Link href="https://example.com" external>访问外部网站</Link>
 * ```
 * 
 * 样式变体：
 * ```astro
 * <Link href="/signup" variant="primary">注册</Link>
 * <Link href="/learn-more" variant="secondary">了解更多</Link>
 * <Link href="/docs" variant="text">查看文档</Link>
 * <Link href="/get-started" variant="cta">立即开始</Link>
 * <Link href="/preview" variant="ghost">预览</Link>
 * ```
 * 
 * 动画效果：
 * ```astro
 * <Link href="/contact" animation="hover-lift">联系我们</Link>
 * <Link href="/features" animation="hover-glow">功能特性</Link>
 * <Link href="/pricing" animation="hover-scale">查看价格</Link>
 * ```
 * 
 * 尺寸变体：
 * ```astro
 * <Link href="/small" size="sm">小型链接</Link>
 * <Link href="/medium" size="md">中型链接</Link>
 * <Link href="/large" size="lg">大型链接</Link>
 * ```
 */

import "../../styles/index.css";

import type { HTMLAttributes } from 'astro/types';

// 定义链接尺寸类型
type LinkSize = 'sm' | 'md' | 'lg';

// 定义链接变体类型
type LinkVariant = 'default' | 'primary' | 'secondary' | 'text' | 'cta' | 'ghost';

// 定义链接动画类型
type LinkAnimation = 'none' | 'hover-lift' | 'hover-glow' | 'hover-scale';

interface Props extends HTMLAttributes<'a'> {
	href: string;
	external?: boolean;
	class?: string;
	'class:list'?: any;
	variant?: LinkVariant;
	animation?: LinkAnimation;
	size?: LinkSize;
}

const {
	href,
	external = false,
	variant = 'default',
	animation = 'none',
	size = 'md',
	class: className = '',
	'class:list': classList,
	...rest
} = Astro.props;

// 基础样式
const baseStyles = "link";

// 尺寸变体
const sizeStyles: Record<LinkSize, string> = {
	sm: "link-sm",
	md: "link-md",
	lg: "link-lg"
};

// 主题变体
const variantStyles: Record<LinkVariant, string> = {
	default: "link-default",
	primary: "link-primary",
	secondary: "link-secondary",
	text: "link-text",
	cta: "link-cta",
	ghost: "link-ghost"
};

// 动画效果
const animationStyles: Record<LinkAnimation, string> = {
	none: "",
	"hover-lift": "link-hover-lift",
	"hover-glow": "link-hover-glow",
	"hover-scale": "link-hover-scale"
};

// 合并所有样式
const finalClassName = [
	baseStyles,
	sizeStyles[size as LinkSize],
	variantStyles[variant as LinkVariant],
	animationStyles[animation as LinkAnimation],
	className
].join(' ');
---


	<a
		href={href}
		class:list={[finalClassName, classList]}
	{...external ? { target: '_blank', rel: 'noopener noreferrer' } : {}}
	{...rest}
>
		<slot />
	</a>
