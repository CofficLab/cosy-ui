---
/**
 * @component Flex
 * 
 * @description
 * Flex 组件是一个灵活的弹性布局组件，用于创建各种排列和对齐方式的布局。
 * 它封装了 CSS Flexbox 的常用功能，提供简单易用的接口来控制子元素的排列方式。
 * 
 * @design
 * 设计理念：
 * 1. 简单易用 - 通过简洁的 API 控制复杂的 Flexbox 布局
 * 2. 灵活可配置 - 支持所有常见的 Flexbox 属性
 * 3. 语义化属性 - 使用直观的属性名称，降低学习成本
 * 4. 响应式友好 - 可以与响应式工具类结合使用
 * 
 * @usage
 * 基本用法：
 * ```astro
 * <Flex>
 *   <div>默认水平排列</div>
 *   <div>居中对齐</div>
 * </Flex>
 * ```
 * 
 * 垂直排列：
 * ```astro
 * <Flex direction="column">
 *   <div>第一项</div>
 *   <div>第二项</div>
 * </Flex>
 * ```
 * 
 * 自定义对齐和间距：
 * ```astro
 * <Flex direction="column" align="start" justify="between" gap="lg">
 *   <div>垂直排列</div>
 *   <div>左对齐</div>
 *   <div>两端对齐</div>
 *   <div>大间距</div>
 * </Flex>
 * ```
 * 
 * @props
 * @prop {string} [direction="row"] - 排列方向，可选值：row, row-reverse, column, column-reverse
 * @prop {string} [justify="center"] - 水平对齐方式，可选值：start, end, center, between, around, evenly
 * @prop {string} [align="center"] - 垂直对齐方式，可选值：start, end, center, stretch, baseline
 * @prop {boolean} [wrap=false] - 是否允许换行
 * @prop {string} [gap="md"] - 元素间距，可选值：none, xs, sm, md, lg, xl
 * @prop {string} [class] - 自定义类名
 * @prop {any} [class:list] - 类名列表
 */

// 导入样式
import '../styles/index.css';
import '../styles/components/flex.css';

import type { HTMLAttributes } from 'astro/types';

type Direction = 'row' | 'row-reverse' | 'column' | 'column-reverse';
type Justify = 'start' | 'end' | 'center' | 'between' | 'around' | 'evenly';
type Align = 'start' | 'end' | 'center' | 'stretch' | 'baseline';
type Gap = 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';

interface Props extends HTMLAttributes<'div'> {
  /**
   * 排列方向
   * @default "row"
   */
  direction?: Direction;
  
  /**
   * 水平对齐方式
   * @default "center"
   */
  justify?: Justify;
  
  /**
   * 垂直对齐方式
   * @default "center"
   */
  align?: Align;
  
  /**
   * 是否允许换行
   * @default false
   */
  wrap?: boolean;
  
  /**
   * 元素间距
   * @default "md"
   */
  gap?: Gap;
  
  /**
   * 自定义类名
   */
  class?: string;
  
  /**
   * 类名列表
   */
  'class:list'?: any;
}

const {
  direction = 'row',
  justify = 'center',
  align = 'center',
  wrap = false,
  gap = 'md',
  class: className = '',
  'class:list': classList,
  ...rest
} = Astro.props;

// 方向映射
const directionClasses: Record<Direction, string> = {
  'row': 'flex-row',
  'row-reverse': 'flex-row-reverse',
  'column': 'flex-col',
  'column-reverse': 'flex-col-reverse'
};

// 水平对齐映射
const justifyClasses: Record<Justify, string> = {
  'start': 'justify-start',
  'end': 'justify-end',
  'center': 'justify-center',
  'between': 'justify-between',
  'around': 'justify-around',
  'evenly': 'justify-evenly'
};

// 垂直对齐映射
const alignClasses: Record<Align, string> = {
  'start': 'items-start',
  'end': 'items-end',
  'center': 'items-center',
  'stretch': 'items-stretch',
  'baseline': 'items-baseline'
};

// 间距映射
const gapClasses: Record<Gap, string> = {
  'none': 'gap-0',
  'xs': 'gap-2',
  'sm': 'gap-4',
  'md': 'gap-6',
  'lg': 'gap-8',
  'xl': 'gap-12'
};

// 构建最终类名
const flexClasses = [
  'flex',
  directionClasses[direction as Direction],
  justifyClasses[justify as Justify],
  alignClasses[align as Align],
  wrap ? 'flex-wrap' : 'flex-nowrap',
  gapClasses[gap as Gap],
  className
].join(' ');
---

<div class:list={[flexClasses, classList]} {...rest}>
  <slot />
</div>
