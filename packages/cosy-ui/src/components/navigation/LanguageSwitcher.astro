---
/**
 * @component LanguageSwitcher
 *
 * @description
 * LanguageSwitcher 组件提供一个语言切换下拉菜单，支持多语言网站的语言切换功能。
 * 组件会自动处理 URL 路径，确保在切换语言时保留当前页面路径。
 *
 * @design
 * 设计理念：
 * 1. 简洁直观 - 清晰显示当前语言和可选语言
 * 2. 无缝集成 - 自动处理 URL 路由，保持用户浏览上下文
 * 3. 可定制性 - 支持自定义语言列表和当前语言设置
 * 4. 一致的视觉风格 - 使用与整体设计系统一致的下拉菜单样式
 *
 * @usage
 * 基本用法：
 * ```astro
 * <LanguageSwitcher />
 * ```
 *
 * 自定义语言列表：
 * ```astro
 * <LanguageSwitcher
 *   languages={[
 *     { code: 'zh-cn', name: '简体中文' },
 *     { code: 'en', name: 'English' },
 *     { code: 'ja', name: '日本語' }
 *   ]}
 *   currentLocale="en"
 * />
 * ```
 */

import Button from '../base/Button.astro';
import Link from '../base/Link.astro';
import '../../app.css';

interface Language {
	code: string;
	name: string;
}

interface Props {
	/**
	 * 自定义类名
	 */
	class?: string;

	/**
	 * 语言列表
	 * @default [{ code: 'zh-cn', name: '简体中文' }, { code: 'en', name: 'English' }]
	 */
	languages?: Language[];

	/**
	 * 当前语言
	 * @default 'zh-cn'
	 */
	currentLocale?: string;
}

const {
	class: className,
	languages = [
		{ code: 'zh-cn', name: '简体中文' },
		{ code: 'en', name: 'English' },
	],
	currentLocale = 'zh-cn',
} = Astro.props;

const currentLanguageName =
	languages.find((lang: Language) => lang.code === currentLocale)?.name || '简体中文';

// 为每个语言生成对应的URL
function generateLanguageUrl(langCode: string): string {
	const currentPath = Astro.url.pathname;
	const pathParts = currentPath.split('/').filter(Boolean);
	const firstPathPart = pathParts[0];
	const supportedLanguages = languages.map((lang: Language) => lang.code);
	const isFirstPartLang = supportedLanguages.includes(firstPathPart);

	if (isFirstPartLang) {
		pathParts[0] = langCode;
		return '/' + pathParts.join('/');
	} else {
		return '/' + langCode + (currentPath === '/' ? '' : currentPath);
	}
}
---

<div class:list={['cosy:dropdown cosy:dropdown-end', className]}>
	<Button variant="ghost" size="sm" class="cosy:p-1">
		{currentLanguageName}
	</Button>
	<ul
		tabindex={0}
		class="cosy:bg-slate-900 cosy:dark:bg-slate-800 cosy:shadow-lg cosy:p-2 cosy:rounded-box cosy:w-40 cosy:dropdown-content cosy:menu">
		{
			languages.map((lang: Language) => (
				<li>
					<Link
						href={generateLanguageUrl(lang.code)}
						class:list={[{ 'cosy:active': lang.code === currentLocale }]}>
						{lang.name}
					</Link>
				</li>
			))
		}
	</ul>
</div>
