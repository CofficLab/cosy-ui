---
/**
 * Stack组件
 * 
 * 一个垂直堆叠布局组件，用于垂直排列元素并控制它们之间的间距
 * 
 * @example
 * ```astro
 * <Stack>
 *   <div>第一个元素</div>
 *   <div>第二个元素</div>
 *   <div>第三个元素</div>
 * </Stack>
 * 
 * <Stack gap="lg" dividers={true}>
 *   <div>带分隔线的堆叠</div>
 *   <div>大间距</div>
 *   <div>自动垂直排列</div>
 * </Stack>
 * ```
 */

interface Props {
  /**
   * 元素间距
   * @default "md"
   */
  gap?: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
  
  /**
   * 是否显示分隔线
   * @default false
   */
  dividers?: boolean;
  
  /**
   * 分隔线颜色
   * @default "gray"
   */
  dividerColor?: 'gray' | 'light' | 'dark' | 'primary';
  
  /**
   * 对齐方式
   * @default "stretch"
   */
  align?: 'start' | 'center' | 'end' | 'stretch';
  
  /**
   * 自定义类名
   */
  class?: string;
  
  /**
   * 类名列表
   */
  'class:list'?: any;
  
  [key: string]: any;
}

const {
  gap = 'md',
  dividers = false,
  dividerColor = 'gray',
  align = 'stretch',
  class: className = '',
  'class:list': classList,
  ...rest
} = Astro.props;

// 间距映射
const gapClasses = {
  'none': 'space-y-0',
  'xs': 'space-y-2',
  'sm': 'space-y-4',
  'md': 'space-y-6',
  'lg': 'space-y-8',
  'xl': 'space-y-12'
};

// 对齐方式映射
const alignClasses = {
  'start': 'items-start',
  'center': 'items-center',
  'end': 'items-end',
  'stretch': 'items-stretch'
};

// 分隔线颜色映射
const dividerColorClasses = {
  'gray': 'divide-gray-200',
  'light': 'divide-gray-100',
  'dark': 'divide-gray-300',
  'primary': 'divide-blue-200'
};

// 构建最终类名
const stackClasses = [
  'flex flex-col',
  alignClasses[align],
  gapClasses[gap],
  dividers ? `divide-y ${dividerColorClasses[dividerColor]}` : '',
  className
].filter(Boolean).join(' ');
---

<div class:list={[stackClasses, classList]} {...rest}>
  <slot />
</div>

<style>
  /* 基础样式 */
  .flex { display: flex; }
  .flex-col { flex-direction: column; }
  
  /* 对齐方式 */
  .items-start { align-items: flex-start; }
  .items-center { align-items: center; }
  .items-end { align-items: flex-end; }
  .items-stretch { align-items: stretch; }
  
  /* 间距 */
  .space-y-0 > :not([hidden]) ~ :not([hidden]) { margin-top: 0; }
  .space-y-2 > :not([hidden]) ~ :not([hidden]) { margin-top: 0.5rem; }
  .space-y-4 > :not([hidden]) ~ :not([hidden]) { margin-top: 1rem; }
  .space-y-6 > :not([hidden]) ~ :not([hidden]) { margin-top: 1.5rem; }
  .space-y-8 > :not([hidden]) ~ :not([hidden]) { margin-top: 2rem; }
  .space-y-12 > :not([hidden]) ~ :not([hidden]) { margin-top: 3rem; }
  
  /* 分隔线 */
  .divide-y > :not([hidden]) ~ :not([hidden]) { 
    border-top-width: 1px;
    border-top-style: solid;
  }
  
  /* 分隔线颜色 */
  .divide-gray-100 { border-color: #f3f4f6; }
  .divide-gray-200 { border-color: #e5e7eb; }
  .divide-gray-300 { border-color: #d1d5db; }
  .divide-blue-200 { border-color: #bfdbfe; }
</style> 
