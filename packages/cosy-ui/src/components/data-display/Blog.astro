---
import { UserIcon, CalendarIcon } from '../../index';

interface Props {
  title: string;
  subtitle?: string;
  author?: string;
  date?: Date;
  cover?: {
    src: string;
    alt?: string;
  };
  tags?: string[];
}

const {
  title,
  subtitle,
  author,
  date,
  cover,
  tags = [],
} = Astro.props;

// 格式化日期
const formatDate = (date?: Date) => {
  if (!date) return '';
  return new Intl.DateTimeFormat('zh-CN', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
};
---

<article class="article">
  <header class="article-header">
    {cover && (
      <div class="cover-container">
        <img
          src={cover.src}
          alt={cover.alt || title}
          class="cover-image"
        />
      </div>
    )}
    
    <div class="header-content">
      <h1 class="article-title">{title}</h1>
      {subtitle && (
        <p class="article-subtitle">{subtitle}</p>
      )}
      
      <div class="article-meta">
        {author && (
          <div class="meta-item">
            <UserIcon size="16px" />
            <span>{author}</span>
          </div>
        )}
        
        {date && (
          <div class="meta-item">
            <CalendarIcon size="16px" />
            <time datetime={date.toISOString()}>{formatDate(date)}</time>
          </div>
        )}
      </div>

      {tags.length > 0 && (
        <div class="article-tags">
          {tags.map((tag: string) => (
            <span class="tag">{tag}</span>
          ))}
        </div>
      )}
    </div>
  </header>

  <div class="article-content">
    <slot />
  </div>
</article>

<style>
  /* 基础样式 */
  .article {
    container-type: inline-size;
  }

  /* 文章头部 */
  .article-header {
    margin-bottom: 2rem;
  }

  /* 封面图片 */
  .cover-container {
    position: relative;
    width: 100%;
    height: 300px;
    margin-bottom: 1.5rem;
    border-radius: 0.5rem;
    overflow: hidden;
  }

  .cover-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  /* 标题和副标题 */
  .header-content {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .article-title {
    font-size: 2.25rem;
    font-weight: 700;
    line-height: 1.2;
    letter-spacing: -0.025em;
  }

  .article-subtitle {
    font-size: 1.25rem;
    color: var(--text-secondary, rgba(0, 0, 0, 0.7));
  }

  /* 元数据 */
  .article-meta {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 1rem;
    font-size: 0.875rem;
    color: var(--text-secondary, rgba(0, 0, 0, 0.6));
  }

  .meta-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  /* 标签 */
  .article-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag {
    display: inline-block;
    padding: 0.25rem 0.75rem;
    border: 1px solid var(--border-color, #e2e8f0);
    border-radius: 9999px;
    font-size: 0.75rem;
    line-height: 1.5;
  }

  /* 文章内容 */
  .article-content {
    max-width: none;
    font-size: 1.125rem;
    line-height: 1.75;
  }

  /* 响应式调整 */
  @media (min-width: 768px) {
    .article-title {
      font-size: 3rem;
    }

    .cover-container {
      height: 400px;
    }
  }

  /* 暗色主题适配 */
  @media (prefers-color-scheme: dark) {
    .article-subtitle {
      color: var(--text-secondary, rgba(255, 255, 255, 0.7));
    }

    .article-meta {
      color: var(--text-secondary, rgba(255, 255, 255, 0.6));
    }

    .tag {
      border-color: var(--border-color, #2d3748);
    }
  }
</style> 