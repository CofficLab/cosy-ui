---
/**
 * @component LanguageSwitcher
 *
 * @description
 * LanguageSwitcher 组件提供一个语言切换下拉菜单，支持多语言网站的语言切换功能。
 * 组件会自动处理 URL 路径，确保在切换语言时保留当前页面路径。
 *
 * @design
 * 设计理念：
 * 1. 简洁直观 - 清晰显示当前语言和可选语言
 * 2. 无缝集成 - 自动处理 URL 路由，保持用户浏览上下文
 * 3. 可定制性 - 支持自定义语言列表和当前语言设置
 * 4. 一致的视觉风格 - 使用与整体设计系统一致的下拉菜单样式
 *
 * @usage
 * 基本用法：
 * ```astro
 * <LanguageSwitcher />
 * ```
 *
 */

import { ChevronDownIcon, LanguageUtil } from '../../index-astro';
import '../../style.ts';
import { i18n } from 'astro:config/server';

interface Props {
  /**
   * 自定义类名
   */
  class?: string;
}

const { class: className = '' } = Astro.props;

let links: any[] = [];
let currentLocale: string | undefined = undefined;
let currentLanguageName: string | undefined = undefined;

if (i18n !== undefined) {
  const { getSwitcherLinks } = await import('./switcher_util.ts');
  links = getSwitcherLinks(Astro);

  currentLocale = Astro.currentLocale!;
  currentLanguageName = LanguageUtil.getLanguageName(currentLocale);
} else {
  throw new Error('can not use LanguageSwitcher when i18n is disabled');
}
---

{
  i18n !== undefined && (
    <div class={`cosy:dropdown cosy:dropdown-end ${className}`}>
      <div tabindex="0" role="button" class:list={['cosy:btn cosy:btn-ghost']}>
        <span class="cosy:mr-1">{currentLanguageName}</span>
        <ChevronDownIcon size="16px" class="cosy:w-4 cosy:h-4" />
      </div>
      <ul
        tabindex="0"
        class="cosy:z-[1] cosy:bg-base-100 cosy:shadow cosy:p-2 cosy:rounded-box cosy:w-32 cosy:dropdown-content cosy:menu">
        {links.map((link) => (
          <li class={currentLocale === link.locale ? 'cosy:disabled' : ''}>
            <a
              href={link.url}
              class={currentLocale === link.locale ? 'cosy:active' : ''}>
              {link.name}
            </a>
          </li>
        ))}
      </ul>
    </div>
  )
}
