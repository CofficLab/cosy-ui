---
import MainLayout from '../../layouts/DemoLayout.astro';
import { Container, Grid, Flex, Section, Stack } from '@coffic/cosy-ui';
---

<MainLayout title="布局组件 | UI组件库">
  <main>
    <Section padding="lg" background="primary" centered={true}>
      <h1 class="text-3xl font-bold mb-4">布局组件</h1>
      <p class="text-lg mb-8">这些组件可以帮助你快速构建页面布局</p>
    </Section>

    <Section padding="lg">
      <h2 class="text-2xl font-bold mb-6">Container 容器</h2>
      <p class="mb-6">Container组件用于限制内容宽度并居中显示，是最基础的布局组件。</p>
      
      <div class="mb-8 space-y-6">
        <div class="border border-dashed border-gray-300 p-4">
          <Container size="sm" class="bg-gray-100 p-4">
            <p class="text-center">小尺寸容器 (sm)</p>
          </Container>
        </div>
        
        <div class="border border-dashed border-gray-300 p-4">
          <Container size="md" class="bg-gray-100 p-4">
            <p class="text-center">中尺寸容器 (md) - 默认</p>
          </Container>
        </div>
        
        <div class="border border-dashed border-gray-300 p-4">
          <Container size="lg" class="bg-gray-100 p-4">
            <p class="text-center">大尺寸容器 (lg)</p>
          </Container>
        </div>
      </div>
      
      <div class="bg-gray-50 p-6 rounded-lg mb-8">
        <h3 class="text-lg font-semibold mb-4">使用示例</h3>
        <pre class="bg-gray-800 text-white p-4 rounded overflow-x-auto"><code>&lt;Container&gt;
  &lt;p&gt;内容将被限制在一个合理的宽度内并居中显示&lt;/p&gt;
&lt;/Container&gt;

&lt;Container size="sm" padding="lg"&gt;
  &lt;p&gt;小尺寸容器，大内边距&lt;/p&gt;
&lt;/Container&gt;</code></pre>
      </div>
    </Section>
    
    <Section padding="lg" background="gray">
      <h2 class="text-2xl font-bold mb-6">Grid 网格</h2>
      <p class="mb-6">Grid组件提供了一个灵活的网格布局系统，支持响应式列数和间距。</p>
      
      <div class="mb-8 space-y-6">
        <div class="border border-dashed border-gray-300 p-4 bg-white">
          <p class="mb-2 font-medium">2列网格</p>
          <Grid cols={2} gap="md">
            <div class="bg-blue-100 p-4 rounded">第一列</div>
            <div class="bg-blue-100 p-4 rounded">第二列</div>
          </Grid>
        </div>
        
        <div class="border border-dashed border-gray-300 p-4 bg-white">
          <p class="mb-2 font-medium">3列网格</p>
          <Grid cols={3} gap="md">
            <div class="bg-blue-100 p-4 rounded">第一列</div>
            <div class="bg-blue-100 p-4 rounded">第二列</div>
            <div class="bg-blue-100 p-4 rounded">第三列</div>
          </Grid>
        </div>
        
        <div class="border border-dashed border-gray-300 p-4 bg-white">
          <p class="mb-2 font-medium">响应式网格 (移动端1列，平板2列，桌面3列)</p>
          <Grid cols={{base: 1, md: 2, lg: 3}} gap="md">
            <div class="bg-blue-100 p-4 rounded">第一列</div>
            <div class="bg-blue-100 p-4 rounded">第二列</div>
            <div class="bg-blue-100 p-4 rounded">第三列</div>
          </Grid>
        </div>
      </div>
      
      <div class="bg-white p-6 rounded-lg mb-8">
        <h3 class="text-lg font-semibold mb-4">使用示例</h3>
        <pre class="bg-gray-800 text-white p-4 rounded overflow-x-auto"><code>&lt;Grid cols={3} gap="md"&gt;
  &lt;div&gt;第一列&lt;/div&gt;
  &lt;div&gt;第二列&lt;/div&gt;
  &lt;div&gt;第三列&lt;/div&gt;
&lt;/Grid&gt;

&lt;Grid cols={{base: 1, md: 2, lg: 3}} gap="lg"&gt;
  &lt;div&gt;响应式网格&lt;/div&gt;
  &lt;div&gt;在不同屏幕尺寸下&lt;/div&gt;
  &lt;div&gt;显示不同的列数&lt;/div&gt;
&lt;/Grid&gt;</code></pre>
      </div>
    </Section>
    
    <Section padding="lg">
      <h2 class="text-2xl font-bold mb-6">Flex 弹性布局</h2>
      <p class="mb-6">Flex组件提供了一个灵活的弹性布局系统，支持不同的方向、对齐和间距。</p>
      
      <div class="mb-8 space-y-6">
        <div class="border border-dashed border-gray-300 p-4">
          <p class="mb-2 font-medium">水平居中对齐 (默认)</p>
          <Flex class="bg-gray-100 p-4 h-24">
            <div class="bg-blue-100 p-4 rounded">项目1</div>
            <div class="bg-blue-100 p-4 rounded">项目2</div>
            <div class="bg-blue-100 p-4 rounded">项目3</div>
          </Flex>
        </div>
        
        <div class="border border-dashed border-gray-300 p-4">
          <p class="mb-2 font-medium">垂直排列，左对齐</p>
          <Flex direction="column" align="start" class="bg-gray-100 p-4">
            <div class="bg-blue-100 p-4 rounded">项目1</div>
            <div class="bg-blue-100 p-4 rounded">项目2</div>
            <div class="bg-blue-100 p-4 rounded">项目3</div>
          </Flex>
        </div>
        
        <div class="border border-dashed border-gray-300 p-4">
          <p class="mb-2 font-medium">水平两端对齐</p>
          <Flex justify="between" class="bg-gray-100 p-4">
            <div class="bg-blue-100 p-4 rounded">左侧</div>
            <div class="bg-blue-100 p-4 rounded">中间</div>
            <div class="bg-blue-100 p-4 rounded">右侧</div>
          </Flex>
        </div>
      </div>
      
      <div class="bg-gray-50 p-6 rounded-lg mb-8">
        <h3 class="text-lg font-semibold mb-4">使用示例</h3>
        <pre class="bg-gray-800 text-white p-4 rounded overflow-x-auto"><code>&lt;Flex&gt;
  &lt;div&gt;默认水平排列&lt;/div&gt;
  &lt;div&gt;居中对齐&lt;/div&gt;
&lt;/Flex&gt;

&lt;Flex direction="column" align="start" justify="between" gap="lg"&gt;
  &lt;div&gt;垂直排列&lt;/div&gt;
  &lt;div&gt;左对齐&lt;/div&gt;
  &lt;div&gt;两端对齐&lt;/div&gt;
  &lt;div&gt;大间距&lt;/div&gt;
&lt;/Flex&gt;</code></pre>
      </div>
    </Section>
    
    <Section padding="lg" background="gray">
      <h2 class="text-2xl font-bold mb-6">Section 区块</h2>
      <p class="mb-6">Section组件用于创建页面中的内容区块，支持不同的内边距、背景和间距。</p>
      
      <div class="mb-8 space-y-6">
        <div class="border border-dashed border-gray-300 p-4 bg-white">
          <p class="mb-2 font-medium">基础区块</p>
          <div class="bg-gray-100 p-2 rounded">
            <Section padding="sm" background="white" class="border border-gray-200 rounded">
              <h3 class="text-lg font-medium mb-2">区块标题</h3>
              <p>区块内容将被包裹在一个合适的容器中</p>
            </Section>
          </div>
        </div>
        
        <div class="border border-dashed border-gray-300 p-4 bg-white">
          <p class="mb-2 font-medium">带背景色的区块</p>
          <div class="bg-gray-100 p-2 rounded">
            <Section padding="sm" background="primary" centered={true} class="rounded">
              <h3 class="text-lg font-medium mb-2">居中区块</h3>
              <p>带有背景色的居中内容区块</p>
            </Section>
          </div>
        </div>
      </div>
      
      <div class="bg-white p-6 rounded-lg mb-8">
        <h3 class="text-lg font-semibold mb-4">使用示例</h3>
        <pre class="bg-gray-800 text-white p-4 rounded overflow-x-auto"><code>&lt;Section&gt;
  &lt;h2&gt;默认区块&lt;/h2&gt;
  &lt;p&gt;内容将被包裹在一个合适的区块中&lt;/p&gt;
&lt;/Section&gt;

&lt;Section padding="lg" background="gray" centered={true}&gt;
  &lt;h2&gt;自定义区块&lt;/h2&gt;
  &lt;p&gt;大内边距，灰色背景，内容居中&lt;/p&gt;
&lt;/Section&gt;</code></pre>
      </div>
    </Section>
    
    <Section padding="lg">
      <h2 class="text-2xl font-bold mb-6">Stack 垂直堆叠</h2>
      <p class="mb-6">Stack组件用于垂直排列元素并控制它们之间的间距。</p>
      
      <div class="mb-8 space-y-6">
        <div class="border border-dashed border-gray-300 p-4">
          <p class="mb-2 font-medium">基础堆叠</p>
          <Stack gap="md" class="bg-gray-100 p-4">
            <div class="bg-blue-100 p-4 rounded">第一个元素</div>
            <div class="bg-blue-100 p-4 rounded">第二个元素</div>
            <div class="bg-blue-100 p-4 rounded">第三个元素</div>
          </Stack>
        </div>
        
        <div class="border border-dashed border-gray-300 p-4">
          <p class="mb-2 font-medium">带分隔线的堆叠</p>
          <Stack gap="md" dividers={true} class="bg-gray-100 p-4">
            <div class="bg-blue-100 p-4 rounded">第一个元素</div>
            <div class="bg-blue-100 p-4 rounded">第二个元素</div>
            <div class="bg-blue-100 p-4 rounded">第三个元素</div>
          </Stack>
        </div>
        
        <div class="border border-dashed border-gray-300 p-4">
          <p class="mb-2 font-medium">居中对齐的堆叠</p>
          <Stack gap="md" align="center" class="bg-gray-100 p-4">
            <div class="bg-blue-100 p-4 rounded w-1/2">较窄元素</div>
            <div class="bg-blue-100 p-4 rounded w-3/4">中等宽度元素</div>
            <div class="bg-blue-100 p-4 rounded w-1/3">最窄元素</div>
          </Stack>
        </div>
      </div>
      
      <div class="bg-gray-50 p-6 rounded-lg mb-8">
        <h3 class="text-lg font-semibold mb-4">使用示例</h3>
        <pre class="bg-gray-800 text-white p-4 rounded overflow-x-auto"><code>&lt;Stack&gt;
  &lt;div&gt;第一个元素&lt;/div&gt;
  &lt;div&gt;第二个元素&lt;/div&gt;
  &lt;div&gt;第三个元素&lt;/div&gt;
&lt;/Stack&gt;

&lt;Stack gap="lg" dividers={true}&gt;
  &lt;div&gt;带分隔线的堆叠&lt;/div&gt;
  &lt;div&gt;大间距&lt;/div&gt;
  &lt;div&gt;自动垂直排列&lt;/div&gt;
&lt;/Stack&gt;</code></pre>
      </div>
    </Section>
    
    <Section padding="lg" background="primary" centered={true}>
      <h2 class="text-2xl font-bold mb-4">组合使用布局组件</h2>
      <p class="mb-6">这些布局组件可以组合使用，创建复杂的页面布局。</p>
      
      <div class="bg-white p-6 rounded-lg mb-8 text-left">
        <h3 class="text-lg font-semibold mb-4">组合示例</h3>
        <pre class="bg-gray-800 text-white p-4 rounded overflow-x-auto"><code>&lt;Section padding="lg" background="gray"&gt;
  &lt;Container size="lg"&gt;
    &lt;Stack gap="lg"&gt;
      &lt;h2&gt;页面标题&lt;/h2&gt;
      
      &lt;Grid cols={{base: 1, md: 2}}&gt;
        &lt;Stack&gt;
          &lt;h3&gt;左侧内容&lt;/h3&gt;
          &lt;p&gt;一些描述文字...&lt;/p&gt;
        &lt;/Stack&gt;
        
        &lt;Flex direction="column" align="center"&gt;
          &lt;img src="..." alt="示例图片" /&gt;
          &lt;p&gt;图片说明&lt;/p&gt;
        &lt;/Flex&gt;
      &lt;/Grid&gt;
    &lt;/Stack&gt;
  &lt;/Container&gt;
&lt;/Section&gt;</code></pre>
      </div>
    </Section>
  </main>
</MainLayout>

<style>
  .text-3xl {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
  
  .text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
  }
  
  .text-lg {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }
  
  .font-bold {
    font-weight: 700;
  }
  
  .font-semibold {
    font-weight: 600;
  }
  
  .font-medium {
    font-weight: 500;
  }
  
  .mb-2 {
    margin-bottom: 0.5rem;
  }
  
  .mb-4 {
    margin-bottom: 1rem;
  }
  
  .mb-6 {
    margin-bottom: 1.5rem;
  }
  
  .mb-8 {
    margin-bottom: 2rem;
  }
  
  .space-y-6 > * + * {
    margin-top: 1.5rem;
  }
  
  .p-2 {
    padding: 0.5rem;
  }
  
  .p-4 {
    padding: 1rem;
  }
  
  .p-6 {
    padding: 1.5rem;
  }
  
  .rounded {
    border-radius: 0.25rem;
  }
  
  .rounded-lg {
    border-radius: 0.5rem;
  }
  
  .border {
    border-width: 1px;
    border-style: solid;
  }
  
  .border-dashed {
    border-style: dashed;
  }
  
  .border-gray-200 {
    border-color: #e5e7eb;
  }
  
  .border-gray-300 {
    border-color: #d1d5db;
  }
  
  .bg-white {
    background-color: #ffffff;
  }
  
  .bg-gray-50 {
    background-color: #f9fafb;
  }
  
  .bg-gray-100 {
    background-color: #f3f4f6;
  }
  
  .bg-gray-800 {
    background-color: #1f2937;
  }
  
  .bg-blue-100 {
    background-color: #dbeafe;
  }
  
  .text-white {
    color: #ffffff;
  }
  
  .text-center {
    text-align: center;
  }
  
  .text-left {
    text-align: left;
  }
  
  .h-24 {
    height: 6rem;
  }
  
  .w-1/2 {
    width: 50%;
  }
  
  .w-3/4 {
    width: 75%;
  }
  
  .w-1/3 {
    width: 33.333333%;
  }
  
  .overflow-x-auto {
    overflow-x: auto;
  }
</style> 
